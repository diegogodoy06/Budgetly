# Generated by Django 5.2.4 on 2025-07-27 18:33

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('income', 'Entrada'), ('expense', 'Saída'), ('transfer', 'Transferência')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('installments', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('installment_number', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('recurrence_type', models.CharField(choices=[('none', 'Nenhuma'), ('monthly', 'Mensal')], default='none', max_length=10)),
                ('recurrence_end_date', models.DateField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False, help_text='Indica se a transação já foi processada')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounts.account')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='categories.category')),
                ('parent_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_transactions', to='transactions.transaction')),
                ('tags', models.ManyToManyField(blank=True, related_name='transactions', to='categories.tag')),
                ('to_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfer_transactions', to='accounts.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditCardBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('closing_date', models.DateField()),
                ('due_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('open', 'Aberta'), ('closed', 'Fechada'), ('paid', 'Paga'), ('overdue', 'Vencida')], default='open', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='accounts.account')),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('account', 'month', 'year')},
            },
        ),
    ]
