# Generated by Django 5.2.5 on 2025-08-07 18:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_add_user_profile_fields'),
        ('beneficiaries', '0003_alter_beneficiary_unique_together_and_more'),
        ('categories', '0002_alter_category_workspace_alter_costcenter_workspace_and_more'),
        ('transactions', '0005_optimize_balance_queries'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome da regra')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('rule_type', models.CharField(choices=[('categorization', 'Categorização'), ('beneficiary', 'Beneficiário'), ('tag', 'Tag'), ('combination', 'Combinação')], default='categorization', max_length=20)),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('priority', models.IntegerField(default=100, help_text='Prioridade (1-1000, menor número = maior prioridade)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('times_applied', models.IntegerField(default=0, verbose_name='Vezes aplicada')),
                ('last_applied_at', models.DateTimeField(blank=True, null=True, verbose_name='Última aplicação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_rules', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_rules', to='accounts.workspace')),
            ],
            options={
                'verbose_name': 'Regra de Automação',
                'verbose_name_plural': 'Regras de Automação',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RuleAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('set_category', 'Definir categoria'), ('set_beneficiary', 'Definir beneficiário'), ('add_tag', 'Adicionar tag'), ('set_description', 'Definir descrição')], max_length=20)),
                ('text_value', models.CharField(blank=True, max_length=255, verbose_name='Valor texto')),
                ('overwrite_existing', models.BooleanField(default=False, verbose_name='Sobrescrever existente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beneficiaries.beneficiary')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='categories.category')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='automation_rules.automationrule')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='categories.tag')),
            ],
            options={
                'verbose_name': 'Ação da Regra',
                'verbose_name_plural': 'Ações da Regra',
            },
        ),
        migrations.CreateModel(
            name='RuleApplicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('actions_applied', models.JSONField(default=list, verbose_name='Ações aplicadas')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_logs', to='automation_rules.automationrule')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rule_applications', to='transactions.transaction')),
            ],
            options={
                'verbose_name': 'Log de Aplicação',
                'verbose_name_plural': 'Logs de Aplicação',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='RuleCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_type', models.CharField(choices=[('description_contains', 'Descrição contém'), ('description_regex', 'Descrição regex'), ('amount_equals', 'Valor igual'), ('amount_greater', 'Valor maior que'), ('amount_less', 'Valor menor que'), ('amount_range', 'Valor entre'), ('beneficiary_equals', 'Beneficiário igual'), ('beneficiary_contains', 'Beneficiário contém'), ('transaction_type', 'Tipo de transação'), ('account_equals', 'Conta igual')], max_length=30)),
                ('text_value', models.CharField(blank=True, max_length=255, verbose_name='Valor texto')),
                ('numeric_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor numérico')),
                ('numeric_value_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor máximo')),
                ('boolean_value', models.BooleanField(default=False, verbose_name='Valor booleano')),
                ('case_sensitive', models.BooleanField(default=False, verbose_name='Sensível a maiúsculas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='automation_rules.automationrule')),
            ],
            options={
                'verbose_name': 'Condição da Regra',
                'verbose_name_plural': 'Condições da Regra',
            },
        ),
    ]
