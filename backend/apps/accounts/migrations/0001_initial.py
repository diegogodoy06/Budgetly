# Generated by Django 5.2.4 on 2025-07-31 03:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspaces_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='WorkspaceMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('editor', 'Editor'), ('viewer', 'Visualizador')], default='viewer', max_length=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.workspace')),
            ],
            options={
                'unique_together': {('workspace', 'user')},
            },
        ),
        migrations.AddField(
            model_name='workspace',
            name='membros',
            field=models.ManyToManyField(related_name='workspaces', through='accounts.WorkspaceMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('bandeira', models.CharField(choices=[('Visa', 'Visa'), ('Mastercard', 'Mastercard'), ('Elo', 'Elo'), ('American Express', 'American Express'), ('Hipercard', 'Hipercard'), ('Diners Club', 'Diners Club'), ('Discover', 'Discover'), ('JCB', 'JCB'), ('UnionPay', 'UnionPay'), ('Cabal', 'Cabal'), ('Aura', 'Aura'), ('Banricompras', 'Banricompras')], max_length=20)),
                ('ultimos_4_digitos', models.CharField(help_text='Últimos 4 dígitos do cartão', max_length=4)),
                ('dia_vencimento', models.IntegerField(help_text='Dia do vencimento da fatura (1-31)')),
                ('dia_fechamento', models.IntegerField(help_text='Dia do fechamento da fatura (1-31)')),
                ('limite', models.DecimalField(decimal_places=2, max_digits=12)),
                ('saldo_atual', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cor', models.CharField(default='bg-blue-600', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_cards', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_cards', to='accounts.workspace')),
            ],
            options={
                'ordering': ['nome'],
                'unique_together': {('workspace', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('conta-bancaria', 'Conta Bancária'), ('conta-investimento', 'Conta de Investimento'), ('criptomoeda', 'Criptomoeda'), ('cofre', 'Cofre'), ('cartao-prepago', 'Cartão Pré-pago')], max_length=20)),
                ('banco', models.CharField(blank=True, max_length=100, null=True)),
                ('codigo_banco', models.CharField(blank=True, help_text='Código de 3 dígitos do banco', max_length=3, null=True)),
                ('saldo_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('saldo_atual', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('eh_conta', models.BooleanField(default=True)),
                ('cor', models.CharField(default='bg-blue-500', max_length=20)),
                ('icone', models.CharField(default='bank', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='accounts.workspace')),
            ],
            options={
                'ordering': ['nome'],
                'unique_together': {('workspace', 'nome')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='workspace',
            unique_together={('criado_por', 'nome')},
        ),
    ]
